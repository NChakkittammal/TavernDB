We would like a system to keep track of taverns.

Taverns needs a name, a location, and info about the

owner ( a user ). I would also like to have users of the

system (their name) and their roles (names) to start

and the role description. It should also keep track of

the number of floors it has and the names of rats that

live in the basement.
 
 	2. The system should also be able to track Supplies. Supplies should have a unit and a name for instance “ounce” and “strong ale” 
  There should also be a way to track counts. That is to say- inventory. It should have a supply Id, tavern id, and the date it was 
  updated as well as the current count for that supply. There also needs to be a way to show what the tavern received. This will include
  supply id, tavern id, cost, the amount received, and date.
(Note: Supplies table and tavern IDs must exist in their respective tables)

 
	3.Taverns should also provide services. Services should have a name (ie. Pool or Weapon sharpening). They should also have a 
	status which should be a manageable list of values (stored in another table). For instance, ‘active’, ‘inactive’ but we may also
	want to add others down the line. Such as out of stock or discontinued. The database should also keep track of it with a sales 
	table. This table will track service, guest, price, date purchased, amount purchased, and the tavern it belongs to.
  
  
        4.There should be a way to track guests-their names,notes about them,birthdays, cakedays, and status-which can be any kind. 
	Such as sick, fine, hungry, raging and placid. The guests should have classes and should have levels related to them. 
	EX. lvl2 mage, lvl 3 fighte, ((linking table)).Also I no longer want to track rats.



************************************************************************************************************************************






Create Table TavernInfo
(
 TavernID int PRIMARY KEY,
 TavernName varchar(50),
 TavernLocation varchar(500),
 TavernOwner varchar(100),
 NumberOfFloors int
);

Insert into TavernInfo
values
(1, '33s Tavern', 'East Brunswick', 'Thomas', 1 ),
(2, 'Gusto Grill', 'East Brunswick', 'Marco',2);


Create Table OwnerInfo
(
 OwnerID int Primary Key,
 OwnerName varchar(50),
 OwnerRole varchar(100),
 RoleDescrpn varchar(500),
 TavernID int
 /*Tavern_ID  int FOREIGN KEY REFERENCES TavernInfo(Tavern_ID)*/
);

Alter table OwnerInfo Add Foreign Key(TavernID) References TavernInfo(TavernID);

Create Table LocationInfo
(
 LocationID int PRIMARY KEY,
 LocationAddress varchar(500),
 TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
);

Create Table BasementRats
(
 RatID int PRIMARY KEY,
 RatName  varchar(50),
 TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
); 

Drop table if exists BasementRats;

Create Table TavernSupplies
(
 SupplyID INT PRIMARY KEY,
 SupplyUnit INT,
 ItemName VARCHAR(100),
 ItemCount INT,
 DateLastUpdated DATE,
 LocationID int FOREIGN KEY REFERENCES LocationInfo(LocationID),
 TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
);

/*Alter table TavernSupplies Add Foreign Key(TavernID) References TavernInfo(TavernID), Add Foreign Key(LocationID) References LocationInfo(LocationID);*/

Create Table SupplyReceived
(
 SupplyID INT,
 SupplyCost float,
 Amount_Received float,
 Date_Received date,
 LocationID int FOREIGN KEY REFERENCES LocationInfo(LocationID),
 TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
);

Create Table TableServices
(
 serviceID int PRIMARY KEY,
 servicename varchar(100),
 LocationID int FOREIGN KEY REFERENCES LocationInfo(LocationID),
 TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
 );
 
 Create Table ServiceStatus
 (
  serviceStatusID INT PRIMARY KEY,
  statusoptions varchar(100),
  serviceID int FOREIGN KEY REFERENCES TableServices(serviceID),
  LocationID int FOREIGN KEY REFERENCES LocationInfo(LocationID),
  TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
 );
  
  Create Table SalesTable
  ( 
  salesID INT PRIMARY KEY,
  guestname varchar(100),
  tableprice decimal,
  purchasedate date,
  purchaseamount decimal,
  serviceID INT FOREIGN KEY REFERENCES TableServices(serviceID),
  LocationID int FOREIGN KEY REFERENCES LocationInfo(LocationID),
  TavernID int FOREIGN KEY REFERENCES TavernInfo(TavernID)
  );

Insert into SalesTable 
values
(1, 'Nishana', 50.00, '2019-3-9', 100.00,1,1,1),
(2, 'Shebeer', 25.00, '2019-2-5', 75.00,2,2,2);

 
 
   
  


 
 


